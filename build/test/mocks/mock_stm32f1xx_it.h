/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STM32F1XX_IT_H
#define _MOCK_STM32F1XX_IT_H

#include "stm32f1xx_it.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic push
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_stm32f1xx_it_Init(void);
void mock_stm32f1xx_it_Destroy(void);
void mock_stm32f1xx_it_Verify(void);




#define NMI_Handler_Ignore() NMI_Handler_CMockIgnore()
void NMI_Handler_CMockIgnore(void);
#define NMI_Handler_Expect() NMI_Handler_CMockExpect(__LINE__)
void NMI_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_NMI_Handler_CALLBACK)(int cmock_num_calls);
void NMI_Handler_StubWithCallback(CMOCK_NMI_Handler_CALLBACK Callback);
#define HardFault_Handler_Ignore() HardFault_Handler_CMockIgnore()
void HardFault_Handler_CMockIgnore(void);
#define HardFault_Handler_Expect() HardFault_Handler_CMockExpect(__LINE__)
void HardFault_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_HardFault_Handler_CALLBACK)(int cmock_num_calls);
void HardFault_Handler_StubWithCallback(CMOCK_HardFault_Handler_CALLBACK Callback);
#define MemManage_Handler_Ignore() MemManage_Handler_CMockIgnore()
void MemManage_Handler_CMockIgnore(void);
#define MemManage_Handler_Expect() MemManage_Handler_CMockExpect(__LINE__)
void MemManage_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_MemManage_Handler_CALLBACK)(int cmock_num_calls);
void MemManage_Handler_StubWithCallback(CMOCK_MemManage_Handler_CALLBACK Callback);
#define BusFault_Handler_Ignore() BusFault_Handler_CMockIgnore()
void BusFault_Handler_CMockIgnore(void);
#define BusFault_Handler_Expect() BusFault_Handler_CMockExpect(__LINE__)
void BusFault_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_BusFault_Handler_CALLBACK)(int cmock_num_calls);
void BusFault_Handler_StubWithCallback(CMOCK_BusFault_Handler_CALLBACK Callback);
#define UsageFault_Handler_Ignore() UsageFault_Handler_CMockIgnore()
void UsageFault_Handler_CMockIgnore(void);
#define UsageFault_Handler_Expect() UsageFault_Handler_CMockExpect(__LINE__)
void UsageFault_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_UsageFault_Handler_CALLBACK)(int cmock_num_calls);
void UsageFault_Handler_StubWithCallback(CMOCK_UsageFault_Handler_CALLBACK Callback);
#define SVC_Handler_Ignore() SVC_Handler_CMockIgnore()
void SVC_Handler_CMockIgnore(void);
#define SVC_Handler_Expect() SVC_Handler_CMockExpect(__LINE__)
void SVC_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_SVC_Handler_CALLBACK)(int cmock_num_calls);
void SVC_Handler_StubWithCallback(CMOCK_SVC_Handler_CALLBACK Callback);
#define DebugMon_Handler_Ignore() DebugMon_Handler_CMockIgnore()
void DebugMon_Handler_CMockIgnore(void);
#define DebugMon_Handler_Expect() DebugMon_Handler_CMockExpect(__LINE__)
void DebugMon_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_DebugMon_Handler_CALLBACK)(int cmock_num_calls);
void DebugMon_Handler_StubWithCallback(CMOCK_DebugMon_Handler_CALLBACK Callback);
#define PendSV_Handler_Ignore() PendSV_Handler_CMockIgnore()
void PendSV_Handler_CMockIgnore(void);
#define PendSV_Handler_Expect() PendSV_Handler_CMockExpect(__LINE__)
void PendSV_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_PendSV_Handler_CALLBACK)(int cmock_num_calls);
void PendSV_Handler_StubWithCallback(CMOCK_PendSV_Handler_CALLBACK Callback);
#define SysTick_Handler_Ignore() SysTick_Handler_CMockIgnore()
void SysTick_Handler_CMockIgnore(void);
#define SysTick_Handler_Expect() SysTick_Handler_CMockExpect(__LINE__)
void SysTick_Handler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_SysTick_Handler_CALLBACK)(int cmock_num_calls);
void SysTick_Handler_StubWithCallback(CMOCK_SysTick_Handler_CALLBACK Callback);
#define TIM2_IRQHandler_Ignore() TIM2_IRQHandler_CMockIgnore()
void TIM2_IRQHandler_CMockIgnore(void);
#define TIM2_IRQHandler_Expect() TIM2_IRQHandler_CMockExpect(__LINE__)
void TIM2_IRQHandler_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_TIM2_IRQHandler_CALLBACK)(int cmock_num_calls);
void TIM2_IRQHandler_StubWithCallback(CMOCK_TIM2_IRQHandler_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#pragma GCC diagnostic pop
#endif

#endif
